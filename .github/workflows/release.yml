name: Release gha-maven-release-dev

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to release [n.n.n]'
        required: true
      next_development_version:
        description: 'Next development version [n.n.n]'
        required: true

jobs:
  release:
    if: ${{ github.repository_owner == 'npetzall' }}
    runs-on: ubuntu-latest

    steps:
      - name: Check Inputs
        run: '[[ $RELEASE_VERSION =~ $VERSION_PATTERN ]] && [[ $NEXT_VERSION =~ $VERSION_PATTERN ]]'
        env:
          RELEASE_VERSION: ${{ github.event.inputs.release_version }}
          NEXT_VERSION: ${{ github.event.inputs.next_development_version }}
          VERSION_PATTERN: '^[0-9]+\.[0-9]+\.[0-9]+$'
      - uses: actions/checkout@v2
        if: success()
        with:
          fetch-depth: 0
      - uses: nelonoel/branch-name@1ea5c86cb559a8c4e623da7f188496208232e49f
        if: success()
      - name: Setup JDK 16
        if: success()
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: Cache Maven packages
        if: success()
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Create/Update draft
        if: success()
        uses: npetzall/release-ready-action@1e5cc609932faeaec20578ca6c846b9e05e859cc
        id: drafting
        with:
          draft-tag: "v${{ github.event.inputs.release_version }}"
          template: "./.github/release-ready/release_note.dot"
      - name: Setup git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "action@github.com"
      - name: Maven release
        if: success()
        run: >
          ./mvnw
          --batch-mode
          --errors
          --show-version
          release:prepare
          -DreleaseVersion=${{ github.event.inputs.release_version }}
          -DdevelopmentVersion=${{ github.event.inputs.next_development_version }}-SNAPSHOT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload Release Asset
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.drafting.outputs.upload-url }}
          asset_path: ./target/maven-release-dev-${{ github.event.inputs.release_version }}.jar
          asset_name: maven-release-dev-${{ github.event.inputs.release_version }}.jar
          asset_content_type: application/java-archive